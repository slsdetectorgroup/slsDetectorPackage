SLS Detector Package Major Release 3.0.0 released on 31.10.2024
===============================================================

This document describes the differences between v9.0.0 and v8.0.2



    CONTENTS
    --------
    1           Compilation Changes
    2           New or Changed Features
        2.1         Breaking API
        2.2         Resolved or Changed Features
        2.3         New Features
    3           On-board Detector Server Compatibility
    4           Firmware Requirements
    5           Kernel Requirements
    6           Download, Documentation & Support




2 Compilation Changes
=====================


    *   Pyctbgui
        Ctb GUI in Python is now moved into the package. 
        The only compilation it needs is a minor c extension in place


2 New, Changed or Resolved Features
=====================================



2.1 Breaking API
==================


    Receiver
    --------


    *   Receiver callbacks
        Brought much more metadata to receiver callbacks to construct the image.
        Update MultiReceiverApp to reflect this change.


    *   File path
        At start of acquisition or at rx_start command, the file path is only 
        then verified if it exists and created if it does not.


    Client
    ------


    *   Removed receiver/publisher ZMQ IP
        Command line: rx_zmqip gives a warning and does nothing
        Python : rx_zmqip removed
        C++ API: get/setRxZmqIP removed

        Publisher zmq IP set to '0.0.0.0' or to listen on all interfaces.
        The publisher will determine which interface to stream out from based on
        the network route to the subscriber IP. Hence, receiver zmq IP is not 
        required.


    *   Validation for advanced writing register / setting or clearing a bit
        By default, 
            - writing to register required bits written equate the bits read back 
            - setting/clearing a bit required other bits to stay the same. 

        From now on, validation is removed as it is not required. 
        One can force validation by using --validate in the command line or by
        setting the validate option in the API.
       

    Detector Server
    ---------------


    *   [Mythen3] Only run clock can be set


2.2 Resolved or Changed Features
================================

    Client
    ======


    *   Commands Code Generation


    Detector Server
    ---------------


    *   Reconfigure the chip after power on


    Simulator
    ---------


    *   Stop variable set up properly

   
   
    Zmq
    ---


    *   ZMQ Keep alive

    *   enable IPv6 interfaces

    *   prints error for ENOENT (endpoint does not exist)



2.3 New Features
================


    Client
    ------


    *   sls_detector


    *   Command line automatic Generation
    

    *   [Jungfrau] Bunch ID Decoder


    *   [Jungfrau] Collection Mode
    
    
    *   [Gotthard2] Next frame number


    *   [Mythen3] Readout speed


    * sleep



2  On-board Detector Server Compatibility
==========================================


    Eiger       9.0.0
    Jungfrau    9.0.0
    Mythen3     9.0.0
    Gotthard2   9.0.0
    Gotthard    9.0.0
    Moench      9.0.0
    Ctb         9.0.0
    

    On-board Detector Server Upgrade
    --------------------------------

    From v6.1.0 (without tftp):
        update only on-board detector server
            Using command 'updatedetectorserver'


        udpate both on-board detector server and firmware simultaneously
            Using command 'update'

    Instructions available at
        https://slsdetectorgroup.github.io/devdoc/serverupgrade.html




3 Firmware Requirements
========================


    Eiger       02.10.2023 (v32)                    (updated in 7.0.3)
    
    Jungfrau    01.10.2024 (v1.5, HW v1.0)          (updated in 9.0.0)
                01.10.2024 (v2.5, HW v2.0)          (updated in 9.0.0)

    Mythen3     24.01.2023 (v1.4)                   (updated in 7.0.0)

    Gotthard2   03.10.2024 (v0.4)?                   (updated in 9.0.0)

    Gotthard    08.02.2018 (50um and 25um Master)
                09.02.2018 (25 um Slave) 

    Moench      10.07.2023 (v0.3.2)                 (updated in 8.0.0, under development)

    Ctb         28.08.2023 (v1.2)                   (updated in 8.0.0)

    xilinx      10.01.2023 (v0.1)                   (updated in 9.0.0, under development)

    Detector Upgrade
    ----------------

    The following can be upgraded remotely:

    Eiger      via bit files
    Jungfrau   via command <.pof>
    Mythen3    via command <.rbf>
    Gotthard2  via command <.rbf>
    Moench     via command <.pof>
    Ctb        via command <.pof>

    Gotthard cannot be upgraded remotely  

    Except Eiger, 
        upgrade 
            Using command 'programfpga' or

        udpate both on-board detector server and firmware simultaneously
            Using command 'update'


    Instructions available at
        https://slsdetectorgroup.github.io/devdoc/firmware.html




4 Kernel Requirements
======================

    Blackfin 
    --------
    Latest version: Fri Oct 29 00:00:00 2021
    
    Older ones will work, but might have issues with programming firmware via
    the package.

    Nios
    -----
    Compatible version: Mon May 10 18:00:21 CEST 2021

    Kernel Upgrade
    ---------------
    Eiger   via bit files
    Others  via command

    Commands: udpatekernel, kernelversion
    Instructions available at
        https://slsdetectorgroup.github.io/devdoc/commandline.html
        https://slsdetectorgroup.github.io/devdoc/detector.html
        https://slsdetectorgroup.github.io/devdoc/pydetector.html




5 Download, Documentation & Support
====================================

    Download
    --------
    
    The Source Code:
         https://github.com/slsdetectorgroup/slsDetectorPackage
            
    Documentation
    -------------
    
    Installation:
        https://slsdetectorgroup.github.io/devdoc/installation.html

    Quick Start Guide:
        https://slsdetectorgroup.github.io/devdoc/quick_start_guide.html
        
    Firmware Upgrade:
        https://slsdetectorgroup.github.io/devdoc/firmware.html

    Detector Server upgrade:
        https://slsdetectorgroup.github.io/devdoc/serverupgrade.html

    Detector Simulators:
        https://slsdetectorgroup.github.io/devdoc/virtualserver.html

    Consuming slsDetectorPackage:
        https://slsdetectorgroup.github.io/devdoc/consuming.html
        
    API Examples:
        https://github.com/slsdetectorgroup/api-examples

    Command Line Documentation:
        https://slsdetectorgroup.github.io/devdoc/commandline.html

    C++ API Documentation:
        https://slsdetectorgroup.github.io/devdoc/detector.html
       
    C++ API Example:
        https://slsdetectorgroup.github.io/devdoc/examples.html#
        
    Python API Documentation:
        https://slsdetectorgroup.github.io/devdoc/pygettingstarted.html

    Python API Example:
        https://slsdetectorgroup.github.io/devdoc/pyexamples.html

    Receivers (including custom receiver):
        https://slsdetectorgroup.github.io/devdoc/receivers.html
        https://slsdetectorgroup.github.io/devdoc/slsreceiver.html

    Detector UDP Header:
        https://slsdetectorgroup.github.io/devdoc/udpheader.html
        https://slsdetectorgroup.github.io/devdoc/udpdetspec.html

    slsReceiver Zmq Format:
        https://slsdetectorgroup.github.io/devdoc/slsreceiver.html#zmq-json-header-format

    TroubleShooting:
        https://slsdetectorgroup.github.io/devdoc/troubleshooting.html
        https://slsdetectorgroup.github.io/devdoc/troubleshooting.html#receiver-pc-tuning-options
        
    Further Documentation:
        https://www.psi.ch/en/detectors/documentation
        
    Info on Releases:
        https://www.psi.ch/en/detectors/software


    Support
    -------

        dhanya.thattil@psi.ch
        erik.frojdh@psi.ch